# -*- mode: ruby -*-
# vi: set ft=ruby :

VM1 = "agent1"
VM2 = "agent2"
VM3 = "agent3"
VM4 = "docker-agent"

HostName1 = "agent1.local"
HostName2 = "agent2.local"
HostName3 = "agent3.local"
HostName4 = "docker-agent.local"

#ServerIP  = "192.168.50.55"
IP1 = "192.168.56.131"
IP2 = "192.168.56.132"
IP3 = "192.168.56.133"
IP4 = "192.168.56.134"

# OS
#OS1 = "ubuntu/focal64"
OS1 = "bento/ubuntu-20.04"
OS2 = "bento/ubuntu-22.04"
#OS3 = "bento/ubuntu-18.04"
OS3 = "bento/ubuntu-24.04"
OS4 = "bento/ubuntu-20.04"

servers = [
  { :hostname => HostName1, :ip => IP1, :memory => "16384", :vm => VM1, :cpu => 8, :os => OS1},
  { :hostname => HostName2, :ip => IP2, :memory => "16384", :vm => VM2, :cpu => 8, :os => OS2},
  { :hostname => HostName3, :ip => IP3, :memory => "16384", :vm => VM3, :cpu => 8, :os => OS3},
  { :hostname => HostName4, :ip => IP4, :memory => "16384", :vm => VM4, :cpu => 8, :os => OS4}
]

$script = <<-SCRIPT
apt update
apt install -y make vifm bash-completion git curl net-tools
SCRIPT

$script_user = <<-SCRIPT_USER
git clone https://github.com/kyehwanl/config_ready_to_use.git
config_ready_to_use/vagrant_vim_env_config.sh
SCRIPT_USER

common = <<-SCRIPT_COMMON
lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv
resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
SCRIPT_COMMON

$jenkins = <<-SCRIPT
apt install -y --no-install-recommends openjdk-17-jdk-headless
useradd -m jenkins -s /bin/bash
echo -e -n "jenkins\njenkins" | passwd jenkins
usermod -aG sudo jenkins
mkdir /home/vagrant/jenkins_agent
chown -R vagrant:vagrant /home/vagrant/jenkins_agent
SCRIPT


$docker = <<-SCRIPT
sudo apt-get install -y ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
echo \
    "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
    $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
    sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo usermod -aG docker $USER
sudo usermod -aG docker jenkins
newgrp docker
sudo sed -i.bak 's/ExecStart=.*/ExecStart=\/usr\/bin\/dockerd -H tcp:\/\/0.0.0.0:4243 -H unix:\/\/\/var\/run\/docker.sock/' /lib/systemd/system/docker.service
sudo systemctl daemon-reload
sudo service docker restart
SCRIPT


Vagrant.configure("2") do |config|
  #config.vm.box = "bento/ubuntu-18.04"
  #config.vm.box = "bento/ubuntu-20.04"
  #config.vm.box = "bento/ubuntu-22.04"
  #config.disksize.size= '100GB'

  servers.each do |conf|
    #config.vm.box =  conf[:os]
    config.vm.define conf[:vm] do |node|
      node.vm.box = conf[:os]
      node.vm.hostname = conf[:hostname]
      node.vm.network "private_network", ip: conf[:ip]
      node.vm.synced_folder ".", "/vagrant"

      node.vm.provider "virtualbox" do |vb|
        vb.memory = conf[:memory]
        vb.cpus = conf[:cpu]
        #vb.gui = true
      end

      #node.vm.provision "shell", inline: "sudo apt-get update"
      #node.vm.provision "shell", inline: "sudo apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11"
      #node.vm.provision "shell", inline: "sudo sed -i 's/allowed_users=.*$/allowed_users=anybody/' /etc/X11/Xwrapper.config"

      node.vm.provision "shell", inline: common, privileged: true
      node.vm.provision "shell", inline: $script, privileged: true
      node.vm.provision "shell", inline: $jenkins, privileged: true

      if node.vm.hostname == HostName4  
		#puts (" matching hostname:")
		#puts node.vm.hostname 
        node.vm.provision "shell", inline: $docker, privileged: false
      end
      #node.vm.provision "shell", inline: $script_user, privileged: false

    end
  end
end










  
