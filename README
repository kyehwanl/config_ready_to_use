Following are the configs and basic application for the development environment


Contents
========
Vim
tmux
screen
vifm
etc


Steps
=====

* install.sh file includes following steps, so just try
    [sudo] install.sh  <-- Need root permission to install


0. Install utils and libraries
    yum -y install epel-release tmux vim ctags cscope gcc automake autoconf libtool net-tools psmisc patch wget

1. git cloning into any place

2. copy all the contents including hidden files into the account root directory
    - it may need to disable the default aliasing (alias cp='cp -i'),
      which will stop to ask a confirmation when overwriting.
    - for example, 
        yes | cp -rf xxx yyy
        or 
        unalias cp

3. extract _.vimXXX.tar.gz into the root directory

4. set the evn variable, TERM, to have colors
    (for example)
    - export TERM=screen-256color

5. source .bashrc and .bash_xxx to apply changes
    


All-in-one Installation
=======================

source ./install-config-ready.sh

  - tmux, vifm, net-tools
  - ble.sh
  - kubecolor
  - Go v1.23.3 with gotags, vimgo, delve go debugger
  - lazygit
  - helm




Troubleshoot
=============

1. in Vifm, hitting 's' goes to open bash shell, but sometimes it opens 'sh'.
    Theh, go to .vifm/vifmrc, change the  shell command like following lines

    " Start shell in current directory 
    "nnoremap s :shell<cr>             
    nnoremap s :!bash<cr>
    
    
    
    
        
VIM quick setup with color scheme - soloarized 
===============================================
(https://vimawesome.com/plugin/solarized-8)

1.  Vim supports packages (echo has('packages') prints 1)

        In vim command line, 
                :echo has('packages')  --> prints 1


2. download into 'pack'

        git clone https://github.com/lifepillar/vim-solarized8.git \
    ~/.vim/pack/themes/opt/solarized8


3. vimrc

        set background=dark  (or light)
        colorscheme solarized8


4. customizing vimrc 

        " Use Vim settings, rather then Vi settings (much better!).
        " This must be first, because it changes other options as a side effect.
        set nocompatible

        " allow backspacing over everything in insert mode
        set backspace=indent,eol,start

        set background=dark
        colorscheme solarized8
        syntax on
        set hlsearch
        set autoindent


        set nobackup
        set nowritebackup
        set history=50      " keep 50 lines of command line history
        set ruler           " show the cursor position all the time
        set showcmd         " display incomplete commands
    set incsearch       " do incremental searching"


        set shiftwidth=4
        set tabstop=8
        set softtabstop=4
        "set textwidth=79
        set smartindent
        set cindent


        " -------- move among windows ---------------
        nmap <C-H> <C-W>h
        nmap <C-J> <C-W>j
        nmap <C-K> <C-W>k
        nmap <C-L> <C-W>l

    " -------- Search for Visually Selected Text" ------
    vnorem // y/<c-r>"<cr>"

    set splitright   " Puts new vsplit windows to the right of the current"
    set splitbelow   " Puts new split windows to the bottom of the current"

    " Easier horizontal scrolling
    map zl zL
    map zh zH



5. TERM better to use screen-256color ranther than xterm-256color

    - copy the following line into .bashrc or .bash_profile
    export TERM=screen-256color    





Docker CE install
=================

    yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    yum install -y docker-ce



Vagrant Vim Env
================
For easily configure vim envrionment in Vagrant or vm instances, 
Use this file: vagrant_vim_env_config.sh,
    $ wget https://raw.githubusercontent.com/kyehwanl/config_ready_to_use/master/vagrant_vim_env_config.sh
    $ chmod u+x ./vagrant_vim_env_config.sh && ./vagrant_vim_env_config.sh
    

---- For Example with Vagrantfile ----
$script = <<-SCRIPT
apt update
apt install -y make vifm bash-completion git
SCRIPT

$script_user = <<-SCRIPT_USER
git clone https://github.com/kyehwanl/config_ready_to_use.git
config_ready_to_use/vagrant_vim_env_config.sh
SCRIPT_USER

Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: $script, privileged: true
  config.vm.provision "shell", inline: $script_user, privileged: false
end
     


